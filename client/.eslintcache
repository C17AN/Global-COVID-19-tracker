[{"/Users/chanmin/Documents/clone/Covid/client/src/index.js":"1","/Users/chanmin/Documents/clone/Covid/client/src/App.js":"2","/Users/chanmin/Documents/clone/Covid/client/src/components/Cards/Cards.jsx":"3","/Users/chanmin/Documents/clone/Covid/client/src/components/Chart/Chart.jsx":"4","/Users/chanmin/Documents/clone/Covid/client/src/components/CountryPicker/CountryPicker.jsx":"5","/Users/chanmin/Documents/clone/Covid/client/src/api/index.js":"6"},{"size":146,"mtime":1609839416809,"results":"7","hashOfConfig":"8"},{"size":944,"mtime":1609858193638,"results":"9","hashOfConfig":"8"},{"size":2923,"mtime":1609853454064,"results":"10","hashOfConfig":"8"},{"size":1754,"mtime":1609860366553,"results":"11","hashOfConfig":"8"},{"size":969,"mtime":1609857407999,"results":"12","hashOfConfig":"8"},{"size":1016,"mtime":1609857822483,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"vm83t1",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/chanmin/Documents/clone/Covid/client/src/index.js",[],["28","29"],"/Users/chanmin/Documents/clone/Covid/client/src/App.js",[],"/Users/chanmin/Documents/clone/Covid/client/src/components/Cards/Cards.jsx",[],"/Users/chanmin/Documents/clone/Covid/client/src/components/Chart/Chart.jsx",[],"/Users/chanmin/Documents/clone/Covid/client/src/components/CountryPicker/CountryPicker.jsx",["30"],"import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\n\nimport { fetchCountries } from \"../../api/index\";\nimport styles from \"./CountryPicker.module.css\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    console.log(fetchedCountries);\n    fetchAPI();\n  }, [setFetchedCountries]);\n  return (\n    <FormControl className={styles.FormControl}>\n      <NativeSelect\n        default=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"global\">Global</option>\n        {fetchedCountries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","/Users/chanmin/Documents/clone/Covid/client/src/api/index.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":17,"column":6,"nodeType":"37","endLine":17,"endColumn":27,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchedCountries'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [fetchedCountries, setFetchedCountries]",{"range":"44","text":"45"},[504,525],"[fetchedCountries, setFetchedCountries]"]